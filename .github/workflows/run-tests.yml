name: Tests

on: [push, pull_request]

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      OCTOPUSCL_AWS_S3_BUCKET: test
      OCTOPUSCL_AWS_S3_DATASETS_DIR: test_datasets
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
      id: python_setup  # Added an ID for referencing the output

    - name: Cache Python virtualenv
      # Check limits at https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#usage-limits-and-eviction-policy
      uses: actions/cache@v3
      with:
        path: venv
        key: venv-${{ runner.os }}-python-${{ steps.python_setup.outputs.python-version }}-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
        restore-keys: venv-${{ runner.os }}-python-${{ steps.python_setup.outputs.python-version }}-

    - name: Install dependencies
      if: steps.python_cache.outputs.cache-hit != 'true'
      run: |
        python -m venv venv  # Create a virtual environment
        source venv/bin/activate  # Activate the virtual environment
        python -m pip install --upgrade pip  # Upgrade pip
        pip install -r requirements.txt  # Install production dependencies
        pip install -r requirements-dev.txt  # Install development dependencies

    - name: Run fast tests (only on push)
      if: github.event_name == 'push'
      run: |
        source venv/bin/activate  # Ensure the virtual environment is activated
        pytest -m fast

    - name: Run all tests (only on pull request)
      if: github.event_name == 'pull_request'
      run: |
        source venv/bin/activate  # Ensure the virtual environment is activated
        pytest
